spring:
  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 5
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 10000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1
      connect-timeout: 10000
  # multipart 설정
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      resolve-lazily: true
  # mvc 설정
  mvc:
    converters:
      preferred-json-mapper: jackson

mybatis:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
  mapper-locations: classpath:mappers/*.xml
  type-aliases-package: com.runhwani.runmate.model

management:
  endpoints:
    web:
      exposure:
        include: health,info



jwt:
  secret: ${JWT_SECRET:your-default-jwt-secret-key-should-be-very-long-and-secure}
  token-validity-in-seconds: 86400

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    enabled: true
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /v3/api-docs
        name: API Docs
  api-docs:
    path: /v3/api-docs
  show-actuator: false
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

logging:
  level:
    root: INFO
    com.runhwani.runmate: INFO

server:
  port: 8080

course:
  gpx:
    # gpt 추천 경로 : EC2 실제 저장 경로로 들어가야 한다.
    dir: ./gpx

